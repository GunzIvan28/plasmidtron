#!/usr/bin/env python3

import argparse
import sys
import os
import pkg_resources
sys.path.append('../')
sys.path.append('./')
from plasmidtron.PlasmidTron import PlasmidTron
from plasmidtron.InputTypes import InputTypes

version = ''
try:
	version = pkg_resources.get_distribution("plasmidtron").version
except pkg_resources.DistributionNotFound:
	version = 'x.y.z'

parser = argparse.ArgumentParser(
	description = 'A tool to assemble parts of a genome responsible for a trait',
	usage = 'plasmidtron [options] output_directory file_of_traits file_of_nontraits')
parser.add_argument('output_directory', help='Output directory', type=InputTypes.is_output_directory_valid )
parser.add_argument('file_of_traits', help='File of filenames of trait (case) FASTQs', type=InputTypes.is_file_of_traits_valid)
parser.add_argument('file_of_nontraits', help='File of filenames of nontrait (control) FASTQs', type=InputTypes.is_file_of_nontraits_valid)
parser.add_argument('--action',	 '-a', help='Control how the traits kmers are filtered for assembly [%(default)s]', choices=['intersection','union'], default = 'union')
parser.add_argument('--keep_files', '-f', action='store_true', help='Keep intermediate files [%(default)s]')
parser.add_argument('--kmer',	 '-k', help='Kmer to use, depends on read length [%(default)s]', type=InputTypes.is_kmer_valid, default = 51)
parser.add_argument('--min_contig_len',	 '-l', help='Minimum contig length in final assembly [%(default)s]', type=InputTypes.is_min_contig_len_valid, default = 3000)
parser.add_argument('--min_spades_contig_coverage',	 '-c', help='Filter out contigs with low coverage. Set to 0 to keep all. [%(default)s]', type=InputTypes.is_min_spades_contig_coverage_valid, default = 30)
parser.add_argument('--min_kmers_threshold',	 '-m', help='Exclude k-mers occurring less than this [%(default)s]', type=InputTypes.is_min_kmers_threshold_valid, default = 30)
parser.add_argument('--max_kmers_threshold',	 '-x', help='Exclude k-mers occurring more than this [%(default)s]', type=InputTypes.is_max_kmers_threshold_valid, default = 254)
parser.add_argument('--plot_filename', '-p', help='Kmer to use, depends on read length [%(default)s]', default = 'kmerplot.png')
parser.add_argument('--spades_exec', '-s', help='Set the SPAdes executable [%(default)s]', type=str, default = 'spades.py')
parser.add_argument('--threads', '-t', help='Number of threads [%(default)s]', type=InputTypes.is_threads_valid, default = 1)
parser.add_argument('--verbose', '-v', action='store_true', help='Turn on debugging [%(default)s]', default = 0)
parser.add_argument('--version', action='version', version=str(version))

options = parser.parse_args()

plasmid_tron = PlasmidTron(options)
plasmid_tron.run()
